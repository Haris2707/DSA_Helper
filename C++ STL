# ðŸš€ Lower Bound & Upper Bound in C++

## ðŸ”¹ What is `lower_bound`?
- `lower_bound(start, end, value)` returns **the first element â‰¥ value**.
- If not found, it returns `end()`.

## ðŸ”¹ What is `upper_bound`?
- `upper_bound(start, end, value)` returns **the first element > value**.
- If not found, it returns `end()`.

## ðŸ“Œ Code Example
```cpp
#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

int main() {
    vector<int> v = {1, 2, 4, 4, 6, 8};

    int lbIndex = lower_bound(v.begin(), v.end(), 4) - v.begin(); // it return 2 as we are doint -v.begin() which give us index
    int ubIndex = upper_bound(v.begin(), v.end(), 4) - v.begin(); // it return 4

    int ubIndex = upper_bound(v.begin(), v.end(), 4); // this gives us the value like here we get 6

    cout << "Lower Bound Index: " << lbIndex << endl;
    cout << "Upper Bound Index: " << ubIndex << " (value: " << v[ubIndex] << ")" << endl;
}
